{"ast":null,"code":"import _slicedToArray from \"/Users/ermatov/Desktop/github/dashboard-earthy-being/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ermatov/Desktop/github/dashboard-earthy-being/src/components/list/List.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport TablePagination from \"@material-ui/core/TablePagination\"; // import axios from \"axios\";\n\nimport dat from '../../data/data';\nimport './list.css';\nexport default function Dashboard() {\n  var _useState = useState(dat),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rowsPerPage = _useState6[0],\n      setRowsPerPage = _useState6[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"This is the list of Customers\"), React.createElement(\"div\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: data.dashBoardData.length,\n    page: page,\n    onChangePage: handleChangePage,\n    rowsPerPage: rowsPerPage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"#Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Invoice Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Customer Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Purchase Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Status\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Tracking\")), data.dashBoardData.map(function (el, ind) {\n    console.log(el);\n\n    if (ind >= page * rowsPerPage && ind < rowsPerPage * page + rowsPerPage) {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, ind + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, el.invoice), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, el.first_name, \" , \", el.last_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, el.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, el.purchaseOn), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, el.amount), React.createElement(\"td\", {\n        className: el.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, el.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, el.tracking));\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/ermatov/Desktop/github/dashboard-earthy-being/src/components/list/List.jsx"],"names":["React","useState","useEffect","Pagination","PaginationItem","PaginationLink","TablePagination","dat","Dashboard","data","setData","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","dashBoardData","length","map","el","ind","console","log","invoice","first_name","last_name","email","purchaseOn","amount","status","tracking"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport TablePagination from \"@material-ui/core/TablePagination\";\n// import axios from \"axios\";\nimport dat from '../../data/data'\nimport './list.css'\n\nexport default function Dashboard() {\n    const [data, setData] = useState(dat);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const handleChangePage = (event, newPage) => { setPage(newPage);};\n    const handleChangeRowsPerPage = (event) => {setRowsPerPage(parseInt(event.target.value, 10));setPage(0);};\n    return (\n        <div className = 'list'>\n            <h3>This is the list of Customers</h3>\n            <div className=\"page\">\n                <TablePagination\n                component=\"div\"\n                count={data.dashBoardData.length}\n                page={page}\n                onChangePage={handleChangePage}\n                rowsPerPage={rowsPerPage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            </div>\n            <table>\n                <tr>\n                    <th>#Number</th>\n                    <th>Invoice Number</th>\n                    <th>Customer Name</th>\n                    <th>Email</th>\n                    <th>Purchase Date</th>\n                    <th>Amount</th>\n                    <th>Status</th>\n                    <th>Tracking</th>\n                </tr>\n                {data.dashBoardData.map((el, ind) => {\n                    console.log(el)\n                    if (ind >= page * rowsPerPage && ind < rowsPerPage * page + rowsPerPage) {\n                        return(\n                        <tr>\n                        <td>{ind + 1 }</td>\n                        <td>{el.invoice }</td>\n                        <td>{el.first_name} , {el.last_name }</td>\n                        <td>{el.email }</td>\n                        <td>{el.purchaseOn }</td>\n                        <td>{el.amount}</td>\n                        <td className = {el.status}>{el.status }</td>\n                        <td>{el.tracking }</td>\n                    </tr>)\n                    }                       \n                })}\n            </table>\n            \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}